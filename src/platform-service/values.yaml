# Default values for platform-service
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  loadbalancerURL: "http://test/abc"
replicaCount: 1
maxSurge: 1
maxUnavailable: 0

image:
  registry: docker.io
  repository: harness/platform-service-signed
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "76201"
  digest: ""

waitForInitContainer:
  image:
    registry: docker.io
    repository: harness/helm-init-container
    pullPolicy: IfNotPresent
    tag: "latest"
    digest: ""

mongoSecrets:
  userName:
    name: harness-secrets
    key: mongodbUsername
  password:
    name: mongodb-replicaset-chart
    key: mongodb-root-password

appLogLevel: INFO

java:
  memory: "3072m"

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "harness-default"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  runAsUser: 65534
  runAsNonRoot: true

probes:
  readinessProbe:
    httpGet:
      path: /api/health
      port: http
    timeoutSeconds: 2
    periodSeconds: 10
    failureThreshold: 5
  livenessProbe:
    httpGet:
      path: /api/health
      port: http
    timeoutSeconds: 2
    periodSeconds: 10
    failureThreshold: 5
  startupProbe:
    httpGet:
      path: /api/health
      port: http
    timeoutSeconds: 2
    periodSeconds: 10
    failureThreshold: 25

service:
  type: ClusterIP
  port: 9005

resources:
  limits:
    cpu: 0.5
    memory: 8192Mi
  requests:
    cpu: 0.5
    memory: 512Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

smtp:
  host: ""
  port: ""
  password: ""
  user: ""
  ssl: true

nodeSelector: {}

tolerations: []

affinity: {}

imagePullSecrets: {}
